version: "3.8"

services:
  user-service:
    restart: on-failure
    build:
      context: user-service
      dockerfile: Dockerfile
    environment:
      DB_USER: user
      DB_PASS: password
      DB_NAME: dev
    ports:
      - "9999:9999"
    networks:
      internal_network:
        ipv4_address: 10.0.0.102
    depends_on:
      - postgres-db
      - discovery-service

  inventory-service:
    restart: on-failure
    build:
      context: inventory-service
      dockerfile: Dockerfile
    environment:
      DB_USER: user
      DB_PASS: password
      DB_NAME: dev
    ports:
      - "8888:8888"
    networks:
      internal_network:
        ipv4_address: 10.0.0.101
    depends_on:
      - postgres-db
      - discovery-service

  gateway-service:
    restart: on-failure
    build:
      context: api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      internal_network:
        ipv4_address: 10.0.0.100
    depends_on:
      - discovery-service
      - inventory-service
      - user-service

  discovery-service:
    restart: on-failure
    build:
      context: discovery-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      internal_network:
        ipv4_address: 10.0.0.10

  postgres-db:
    image: postgres:latest
    restart: always
    expose:
      - "5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dev
    networks:
      internal_network:
        ipv4_address: 10.0.0.2

networks:
  internal_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "10.0.0.0/16"
          gateway: "10.0.0.1"